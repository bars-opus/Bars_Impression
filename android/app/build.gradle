
plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id "com.google.gms.google-services"
    id "com.google.firebase.crashlytics"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '5'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.5'
}


def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 35

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }


    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.barsOpus.barsImpression"
        minSdkVersion 23
        targetSdk 35
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }

      signingConfigs {
       release {
           keyAlias keystoreProperties['keyAlias']
           keyPassword keystoreProperties['keyPassword']
           storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
           storePassword keystoreProperties['storePassword']
       }
   }
   buildTypes {
       release {
           signingConfig signingConfigs.release
       }
   }
    namespace 'com.example.bars'
    lint {
        disable 'InvalidPackage'
    }

 
}

flutter {
    source '../..'
}

dependencies {
    // implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    // implementation 'com.google.firebase:firebase-analytics:17.2.2'
    implementation 'androidx.multidex:multidex:2.0.1'
    // implementation 'com.google.firebase:firebase-messaging:20.2.0'
    //   implementation 'com.google.firebase:firebase-messaging:<latest_version>'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'com.androidx.support.test:runner:1.6.1'
    // androidTestImplementation 'com.androidx.support.test.espresso:espresso-core:3.1.0'
    androidTestImplementation 'com.androidx.support.test.espresso:espresso-core:3.6.1'
    implementation 'com.google.firebase:firebase-dynamic-links'
    
 
}

// apply plugin: 'com.google.gms.google-services'
// apply plugin: 'com.android.application'